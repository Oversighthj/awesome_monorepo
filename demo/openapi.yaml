openapi: 3.0.1
info:
  title: Demo API
  version: 0.0.1
  description: التعريف الموحد لواجهة برمجة التطبيقات

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /users:
    get:
      summary: استرجاع جميع المستخدمين
      operationId: getUsers
      responses:
        '200':
          description: قائمة المستخدمين
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

    post:
      summary: إنشاء مستخدم جديد
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
            example:
              id: 1
              name: "Hector Jackson"
              email: "hector@example.com"
      responses:
        '201':
          description: المستخدم الذي تم إنشاؤه
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
              example:
                id: 1
                name: "Hector Jackson"
                email: "hector@example.com"

  /transport/book:
    post:
      summary: حجز رحلة
      operationId: bookTransport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransportBookingDTO'
            example:
              flightId: "FL123"
              userId: "1"
              seatCount: 2
      responses:
        '200':
          description: تأكيد الحجز
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponseDTO'
              example:
                bookingId: 1001
                flightId: "FL123"
                userId: "1"
                seatCount: 2
                status: "CONFIRMED"
                bookingTime: "2025-04-30T15:30:00Z"

components:
  schemas:

    UserDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Hector Jackson"
        email:
          type: string
          format: email
          example: "hector@example.com"

    TransportBookingDTO:
      type: object
      properties:
        flightId:
          type: string
          example: "FL123"
        userId:
          type: string
          example: "1"
        seatCount:
          type: integer
          example: 2
      required:
        - flightId
        - userId
        - seatCount

    BookingResponseDTO:
      type: object
      properties:
        bookingId:
          type: integer
          example: 1001
        flightId:
          type: string
          example: "FL123"
        userId:
          type: string
          example: "1"
        seatCount:
          type: integer
          example: 2
        status:
          type: string
          example: "CONFIRMED"
        # حقل زمني بصيغة ISO-8601 وسيولَّد كـ OffsetDateTime في الجافا
        bookingTime:
          type: string
          format: date-time
          x-java-type: java.time.OffsetDateTime
          example: "2025-04-30T15:30:00Z"
