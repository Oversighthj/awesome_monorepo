/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.demo.api;

import com.example.demo.model.PaymentRequestDTO;
import com.example.demo.model.PaymentResponseDTO;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-02T14:14:32.978510261+08:00[Asia/Kuala_Lumpur]")
@Validated
@Tag(name = "payments", description = "the payments API")
public interface PaymentsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /payments/checkout : Initiate payment session (Stripe / PayPal)
     *
     * @param paymentRequestDTO  (required)
     * @return Checkout session info (status code 200)
     */
    @Operation(
        operationId = "initiatePayment",
        summary = "Initiate payment session (Stripe / PayPal)",
        responses = {
            @ApiResponse(responseCode = "200", description = "Checkout session info", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PaymentResponseDTO.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/payments/checkout",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<PaymentResponseDTO> initiatePayment(
        @Parameter(name = "PaymentRequestDTO", description = "", required = true) @Valid @RequestBody PaymentRequestDTO paymentRequestDTO
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"providerSessionId\" : \"providerSessionId\", \"expiresAt\" : \"2000-01-23T04:56:07.000+00:00\", \"checkoutUrl\" : \"https://openapi-generator.tech\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
