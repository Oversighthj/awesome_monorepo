name: Full CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# ───────────────────────────── Backend ─────────────────────────────
jobs:
  backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: ☕ Set up Temurin JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: 🏗️ Generate OpenAPI sources & compile
        working-directory: demo
        run: |
          ./mvnw -q clean generate-sources
          ./mvnw -q test-compile

      - name: 🔒 Verify backend working tree is clean
        run: |
          if [[ -n "$(git status --porcelain demo)" ]]; then
            echo "::error::Working tree not clean. Did you forget to commit code changes?"
            git status --porcelain
            exit 1
          fi

      - name: 🧹 Spotless check
        working-directory: demo
        run: ./mvnw spotless:check

      - name: ✅ Run backend tests
        working-directory: demo
        run: ./mvnw -q test

      - name: 📊 Generate Jacoco coverage report
        working-directory: demo
        run: ./mvnw jacoco:report

# ───────────────────────────── Flutter ─────────────────────────────
  flutter:
    name: Build & Test Flutter
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 🐦 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: ♻️ Cache Flutter pub packages
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pilot_app/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 📦 Install dependencies
        working-directory: pilot_app
        run: flutter pub get

      - name: 🔨 Generate code (build_runner)
        working-directory: pilot_app
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: 🔒 Verify flutter generated sources are committed
        run: |
          CHANGES=$(git status --porcelain pilot_app \
            | grep -v ' pilot_app/lib/generated/')   # استبعد كل ما يقع تحت lib/generated

          if [[ -n "$CHANGES" ]]; then
            echo "::error::Flutter generated code is out of date. Run build_runner and commit changes."
            echo "$CHANGES"
            exit 1
          fi

      - name: 🔍 Static analysis
        working-directory: pilot_app
        run: flutter analyze --fatal-warnings

      - name: ✅ Run Flutter tests
        working-directory: pilot_app
        run: flutter test --coverage

      - name: 📊 Generate Flutter coverage HTML
        working-directory: pilot_app
        run: |
          sudo apt-get update && sudo apt-get install -y lcov
          genhtml coverage/lcov.info -o coverage/html

